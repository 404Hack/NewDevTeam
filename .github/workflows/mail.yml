name: WelcometoTeam

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  validar_pr:
    runs-on: ubuntu-latest
    steps:
    - name: Validar el nombre del branch
      if: ${{ github.event.pull_request.user.login != github.repository_owner }}
      run: |
        BRANCH_NAME="${{ github.head_ref }}"
        if [[ "$BRANCH_NAME" == "main" || "$BRANCH_NAME" == "master" ]]; then
          echo "El branch no puede ser 'main' o 'master'."
          exit 1
        fi
      shell: bash
    - name: Validar cambios en un archivo específico
      if: ${{ github.event.pull_request.user.login != github.repository_owner }}
      run: |
        ARCHIVO="NewDevTeam/ChatData.txt"
        if git diff --name-only HEAD^..HEAD | grep -q "$ARCHIVO"; then
          URL=$(git show HEAD:"$ARCHIVO" | grep "url:" | awk -F ":" '{print $2}' | tr -d '[:space:]')
          if [ -n "$URL" ]; then
            echo "::set-output name=url::$URL" 
          else
            echo "No se encontró una URL en $ARCHIVO."
            exit 1
          fi
        else
          echo "El archivo $GITHUB_WORKSPACE/$ARCHIVO no ha sido modificado en esta PR."
          exit 1
        fi
      shell: bash
    - name: Validar comentarios en el commit
      if: ${{ github.event.pull_request.user.login != github.repository_owner }}
      run: |
        if ! git log --format=%B -n 1 HEAD | grep -qE ".*[a-zA-Z0-9]+.*"; then
          echo "El commit no contiene comentarios."
          exit 1
        fi
      shell: bash
    - name: Validar comentarios en la solicitud de extracción
      if: ${{ github.event.pull_request.user.login != github.repository_owner }}
      run: |
        COMMENTS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/comments")
        if [[ "$COMMENTS" == "[]" ]]; then
          echo "La solicitud debe incluir comentarios."
          exit 1
        fi
      shell: bash
    - name: Agregar comentario a la solicitud de extracción
      if: success()
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const mensaje = `Todas las condiciones se han cumplido con éxito`;
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: mensaje
          })
    - name: Enviar mensaje a Slack
      env:
        FLAG: ${{ secrets.FLAG }}
      run: |
        URL="${{ steps.validacion.outputs.url }}"
        SECRETO="$FLAG"
        curl -X POST -H 'Content-type: application/json' --data '{
          "message": "Todas las condiciones se han cumplido con éxito. Secreto: $SECRETO"
        }' $URL
